/*
Deployment script for EMBC

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "EMBC"
:setvar DefaultFilePrefix "EMBC"
:setvar DefaultDataPath "F:\MSSQL\Data\"
:setvar DefaultLogPath "F:\MSSQL\Log\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Removing schema binding from [era_rpt].[DimReferralDetails]...';


GO
ALTER VIEW [era_rpt].[DimReferralDetails]
AS
SELECT DimReferralDetailBK,
       EvacuationFileId,
       ReferralStatus,
       Purchaser,
       Comments,
       Requestor,
       Source
FROM   (SELECT CONVERT (NVARCHAR (40), D.Id) AS 'DimReferralDetailBK',
               TRY_CONVERT (BIGINT, D.RegistrationId) AS EvacuationFileId,
               CASE D.Active WHEN 1 THEN 'Active' WHEN 0 THEN 'Inactive' ELSE 'Unknown' END AS 'ReferralStatus',
               D.Purchaser,
               D.Comments,
               E.LastName + ', ' + E.FirstName AS 'Requestor',
               'ERA_RLS1' AS 'Source'
        FROM   [ERA_RLS1].[IncidentTasks] AS a
               INNER JOIN
               [ERA_RLS1].[EvacueeRegistrations] AS b
               ON a.Id = b.IncidentTaskId
               INNER JOIN
               [ERA_RLS1].[Communities] AS c
               ON a.CommunityId = c.Id
               INNER JOIN
               [ERA_RLS1].[Referrals] AS d
               ON d.RegistrationId = b.EssFileNumber
               LEFT OUTER JOIN
               ERA_RLS1.Evacuees AS E
               ON e.RegistrationId = D.RegistrationId
        WHERE  E.EvacueeTypeCode = 'HOH'
        UNION
        SELECT CONVERT (NVARCHAR (40), es.era_evacueesupportid) AS 'DimReferralDetailBK',
               TRY_CONVERT (BIGINT, era_evacuationfileidname) AS EvacuationFileId,
               es.statuscodename AS ReferralStatus,
               era_purchaserofgoods AS Purchaser,
               CONVERT (NVARCHAR (4000), era_approveditems) + ' / ' + CONVERT (NVARCHAR (4000), era_suppliernote) AS Comments,
               ef.era_registrantname AS Requestor,
               'ERA Dynamics' AS 'Source'
        FROM   [era_stage].[era_evacueesupport] AS es
               LEFT OUTER JOIN
               [era_stage].[era_evacuationfile] AS ef
               ON es.era_evacuationfileid = ef.era_evacuationfileid
               LEFT OUTER JOIN
               [era_stage].[era_task] AS t
               ON ef.era_taskid = t.era_taskid
        WHERE  es.era_supplierid IS NOT NULL) AS a
WHERE  Requestor IS NOT NULL
       AND Requestor NOT LIKE '%AUTOTEST%';


GO
PRINT N'Removing schema binding from [era_rpt].[FactEvacuees]...';


GO
ALTER VIEW [era_rpt].[FactEvacuees]
AS
SELECT DISTINCT LTRIM(RTRIM(CONVERT (NVARCHAR (20), E.RegistrationId))) + '-' + LTRIM(RTRIM(CONVERT (NVARCHAR (20), E.EvacueeSequenceNumber))) AS FactEvacueesBK,
                E.LastName + ', ' + E.FirstName AS Name,
                E.EvacueeTypeCode,
                CONVERT (NVARCHAR (40), IT.TaskNumber) AS DimTaskBK,
                CONVERT (DATE, IT.TaskNumberStartDate) AS TaskStartDate,
                CONVERT (DATE, IT.TaskNumberEndDate) AS TaskEndDate,
                C.Name AS DimLocationBK_Task,
                CONVERT (NVARCHAR (40), C.Name) AS DimLocationBK_EvacuatedFrom,
                -1 AS DimEvacuationFileStatusBK,
                'ERA_RLS1' AS 'Source'
FROM   [ERA_RLS1].[IncidentTasks] AS IT
       INNER JOIN
       [ERA_RLS1].[EvacueeRegistrations] AS ER
       ON IT.Id = ER.IncidentTaskId
       INNER JOIN
       ERA_RLS1.Evacuees AS E
       ON E.RegistrationId = ER.EssFileNumber
       INNER JOIN
       [ERA_RLS1].[Communities] AS C
       ON IT.CommunityId = C.Id
UNION ALL
SELECT DISTINCT CONVERT (NVARCHAR (40), hhm.era_householdmemberid) AS FactEvacueesBK,
                hhm.era_lastname + ', ' + hhm.era_firstname AS 'Name',
                NULL AS 'EvacueeTypeCode',
                CONVERT (NVARCHAR (40), et.era_taskid) AS DimTaskBK,
                CONVERT (DATE, et.era_taskstartdate) AS era_taskstartdate,
                CONVERT (DATE, et.era_taskenddate) AS era_taskenddate,
                CONVERT (NVARCHAR (40), et.era_jurisdictionid) AS DimLocationBK_task,
                CONVERT (NVARCHAR (40), ef.era_evacuatedfromid) AS DimLocationBK_EvacuatedFrom,
                ef.era_essfilestatus AS DimEvacuationFileStatusBK,
                'ERA Dynamics' AS 'Source'
FROM   [era_stage].era_householdmember AS hhm
       INNER JOIN
       [era_stage].era_evacuationfile AS ef
       ON hhm.era_evacuationfileid = ef.era_evacuationfileid
       INNER JOIN
       [era_stage].[era_task] AS et
       ON et.era_taskid = ef.era_taskid;


GO
PRINT N'Removing schema binding from [era_rpt].[FactReferralEvacuees]...';


GO
ALTER VIEW [era_rpt].[FactReferralEvacuees]
AS
SELECT DISTINCT LTRIM(RTRIM(CONVERT (NVARCHAR (10), R.RegistrationId))) + '-' + LTRIM(RTRIM(CONVERT (NVARCHAR (10), R.EvacueeId))) AS FactReferralEvacueeBK,
                CONVERT (NVARCHAR (40), R.ReferralId) AS 'DimReferralDetailBK',
                E.LastName + ', ' + E.FirstName AS Name,
                'ERA_RLS1' AS 'Source'
FROM   ERA_RLS1.ReferralEvacuees AS R
       LEFT OUTER JOIN
       ERA_RLS1.Evacuees AS E
       ON LTRIM(RTRIM(CONVERT (NVARCHAR (10), R.RegistrationId))) + '-' + LTRIM(RTRIM(CONVERT (NVARCHAR (10), R.EvacueeId))) = LTRIM(RTRIM(CONVERT (NVARCHAR (10), E.RegistrationId))) + '-' + LTRIM(RTRIM(CONVERT (NVARCHAR (10), E.EvacueeSequenceNumber)))
UNION
SELECT DISTINCT CONVERT (NVARCHAR (40), hhm.era_householdmemberid) AS FactReferralEvacueesBK,
                CONVERT (NVARCHAR (40), es.era_evacueesupportid) AS 'DimReferralDetailBK',
                hhm.era_lastname + ', ' + hhm.era_firstname AS 'Name',
                'ERA Dynamics' AS 'Source'
FROM   [era_stage].era_householdmember AS hhm
       INNER JOIN
       [era_stage].era_evacuationfile AS ef
       ON hhm.era_evacuationfileid = ef.era_evacuationfileid
       INNER JOIN
       [era_stage].[era_evacueesupport] AS es
       ON ef.era_evacuationfileid = es.era_evacuationfileid;


GO
PRINT N'Removing schema binding from [era_rpt].[FactReferrals]...';


GO
ALTER VIEW [era_rpt].[FactReferrals]
AS
SELECT CONVERT (NVARCHAR (40), D.Id) AS 'FactReferralBK',
       CONVERT (NVARCHAR (40), D.Id) AS 'DimReferralDetailBK',
       CONVERT (NVARCHAR (40), D.Id) AS ReferralID,
       D.[type] AS 'DimSupportTypeBK',
       D.TotalAmount AS era_totalamount,
       CONVERT (NVARCHAR (40), D.SupplierId) AS 'DimSupplierBK',
       CONVERT (DATE, D.ValidFrom) AS ValidFromDate,
       CONVERT (DATE, D.ValidTo) AS ValidToDate,
       CONVERT (DATE, D.CreatedDateTime) AS 'ReferralDate',
       TaskNumber AS DimTaskBK,
       C.Name AS 'DimLocationB_Task',
       CONVERT (NVARCHAR (40), C.Name) AS DimLocationBK_EvacuatedFrom,
       -1 AS DimEvacuationFileStatusBK,
       DATEDIFF(DAY, D.ValidFrom, D.ValidTo) AS 'NumberOfDays',
       'ERA_RLS1' AS 'Source'
FROM   [ERA_RLS1].[IncidentTasks] AS a
       INNER JOIN
       [ERA_RLS1].[EvacueeRegistrations] AS b
       ON a.Id = b.IncidentTaskId
       INNER JOIN
       [ERA_RLS1].[Communities] AS c
       ON a.CommunityId = c.Id
       INNER JOIN
       [ERA_RLS1].[Referrals] AS d
       ON d.RegistrationId = b.EssFileNumber
       LEFT OUTER JOIN
       ERA_RLS1.Evacuees AS E
       ON e.RegistrationId = D.RegistrationId
WHERE  E.EvacueeTypeCode = 'HOH'
UNION
SELECT CONVERT (NVARCHAR (40), es.era_evacueesupportid) AS 'FactReferralBK',
       CONVERT (NVARCHAR (40), es.era_evacueesupportid) AS 'DimReferralDetailBK',
       es.era_name AS ReferralID,
       CONVERT (NVARCHAR (40), es.era_supporttype) AS 'DimSupportTypeBK',
       es.era_totalamount AS TotalAmount,
       CONVERT (NVARCHAR (40), es.era_supplierid) AS 'DimSupplierBK',
       CONVERT (DATE, es.era_validfrom) AS ValidFromDate,
       CONVERT (DATE, es.era_validto) AS ValidToDate,
       CONVERT (DATE, es.createdon) AS ReferralDate,
       CONVERT (NVARCHAR (40), ef.era_taskid) AS DimTaskBK,
       CONVERT (NVARCHAR (40), t.era_jurisdictionid) AS 'DimLocationBK_Task',
       CONVERT (NVARCHAR (40), ef.era_evacuatedfromid) AS DimLocationBK_EvacuatedFrom,
       ef.era_essfilestatus AS DimEvacuationFileStatusBK,
       DATEDIFF(DAY, es.era_validfrom, es.era_validto) AS 'NumberOfDays',
       'ERA Dynamics' AS 'Source'
FROM   [era_stage].[era_evacueesupport] AS es
       LEFT OUTER JOIN
       [era_stage].[era_evacuationfile] AS ef
       ON es.era_evacuationfileid = ef.era_evacuationfileid
       LEFT OUTER JOIN
       [era_stage].[era_task] AS t
       ON ef.era_taskid = t.era_taskid
WHERE  es.era_supplierid IS NOT NULL;


GO
PRINT N'Removing schema binding from [era_rpt].[FactRegistrant]...';


GO
ALTER VIEW [era_rpt].[FactRegistrant]
AS
SELECT DISTINCT CONVERT (VARCHAR, ER.EssFileNumber) AS FactRegistrantBK,
                IT.TaskNumber AS DimTaskBK,
                CONVERT (DATE, IT.TaskNumberStartDate) AS TaskStartDate,
                CONVERT (DATE, IT.TaskNumberEndDate) AS TaskEndDate,
                C.Name AS DimLocationBK_Task,
                CONVERT (NVARCHAR (40), C.Name) AS DimLocationBK_EvacuatedFrom,
                -1 AS DimEvacuationFileStatusBK,
                'ERA_RLS1' AS 'Source'
FROM   [ERA_RLS1].[IncidentTasks] AS IT
       INNER JOIN
       [ERA_RLS1].[Communities] AS C
       ON IT.CommunityId = C.Id
       INNER JOIN
       [ERA_RLS1].[EvacueeRegistrations] AS ER
       ON IT.Id = ER.IncidentTaskId
UNION ALL
SELECT DISTINCT CONVERT (NVARCHAR (40), ef.era_registrant) AS FactRegistrantBK,
                CONVERT (NVARCHAR (40), et.era_taskid) AS DimTaskBK,
                CONVERT (DATE, et.era_taskstartdate) AS TaskStartDate,
                CONVERT (DATE, et.era_taskenddate) AS TaskEndDate,
                CONVERT (NVARCHAR (40), et.era_jurisdictionid) AS DimLocationBK_Task,
                CONVERT (NVARCHAR (40), ef.era_evacuatedfromid) AS DimLocationBK_EvacuatedFrom,
                ef.era_essfilestatus AS DimEvacuationFileStatusBK,
                'ERA Dynamics' AS 'Source'
FROM   [era_stage].era_evacuationfile AS ef
       INNER JOIN
       [era_stage].[era_task] AS et
       ON et.era_taskid = ef.era_taskid;


GO
PRINT N'Removing schema binding from [era_rpt].[FactSupport]...';


GO
ALTER VIEW [era_rpt].[FactSupport]
AS
SELECT DISTINCT CONVERT (NVARCHAR (40), R.Id) AS FactSupportBK,
                CONVERT (NVARCHAR (40), R.[type]) AS DimSupportTypeBK,
                ISNULL(R.TotalAmount, 0.00) AS TotalAmount,
                CONVERT (NVARCHAR (40), IT.TaskNumber) AS DimTaskBK,
                CONVERT (DATE, IT.TaskNumberStartDate) AS TaskStartDate,
                CONVERT (DATE, IT.TaskNumberEndDate) AS TaskEndDate,
                CONVERT (NVARCHAR (40), C.Name) AS DimLocationBK_Task,
                CONVERT (NVARCHAR (40), C.Name) AS DimLocationBK_EvacuatedFrom,
                -1 AS DimEvacuationFileStatusBK,
                CONVERT (DATE, r.ValidFrom) AS ValidFromDate,
                CONVERT (DATE, r.ValidTo) AS ValidToDate,
                'ERA_RLS1' AS 'Source'
FROM   [ERA_RLS1].[EvacueeRegistrations] AS ER
       INNER JOIN
       [ERA_RLS1].[IncidentTasks] AS IT
       ON IT.Id = ER.IncidentTaskId
       INNER JOIN
       [ERA_RLS1].[Communities] AS C
       ON IT.CommunityId = C.Id
       INNER JOIN
       [ERA_RLS1].[Referrals] AS R
       ON R.RegistrationId = ER.EssFileNumber
UNION ALL
SELECT DISTINCT CONVERT (NVARCHAR (40), es.era_evacueesupportid) AS FactSupportBK,
                CONVERT (NVARCHAR (40), es.era_supporttype) AS DimSupportTypeBK,
                ISNULL(es.era_totalamount, 0.0) AS TotalAmount,
                CONVERT (NVARCHAR (40), et.era_taskid) AS DimTaskBK,
                CONVERT (DATE, et.era_taskstartdate) AS TaskStartDate,
                CONVERT (DATE, et.era_taskenddate) AS TaskEndDate,
                CONVERT (NVARCHAR (40), et.era_jurisdictionid) AS DimLocationBK_Task,
                CONVERT (NVARCHAR (40), ef.era_evacuatedfromid) AS DimLocationBK_EvacuatedFrom,
                ef.era_essfilestatus AS DimEvacuationFileStatusBK,
                CONVERT (DATE, es.era_validfrom) AS ValidFromDate,
                CONVERT (DATE, es.era_validfrom) AS ValidToDate,
                'ERA Dynamics' AS 'Source'
FROM   [era_stage].era_evacueesupport AS es
       INNER JOIN
       [era_stage].era_evacuationfile AS ef
       ON es.era_evacuationfileid = ef.era_evacuationfileid
       INNER JOIN
       [era_stage].[era_task] AS et
       ON et.era_taskid = ef.era_taskid;


GO
PRINT N'Removing schema binding from [era_rpt].[DimSupportType]...';


GO
ALTER VIEW [era_rpt].[DimSupportType]
AS
SELECT DISTINCT [type] AS 'DimSupportTypeBK',
                [type] AS 'Support Type',
                'ERA_RLS1' AS 'Source'
FROM   [ERA_RLS1].[Referrals]
UNION ALL
SELECT DISTINCT CONVERT (NVARCHAR (40), era_supporttype) AS DimSupportTypeBK,
                era_supporttypename AS 'Support Type',
                'ERA Dynamics' AS 'Source'
FROM   [era_stage].era_evacueesupport
WHERE  ltrim(rtrim(era_supporttypename)) != 'Lodging-Hotel/Motel';


GO
PRINT N'Removing schema binding from [era_rpt].[DimTask]...';


GO
ALTER VIEW [era_rpt].[DimTask]
AS
SELECT DISTINCT CONVERT (NVARCHAR (40), TaskNumber) AS DimTaskBK,
                TaskNumber AS 'Task Number',
                'ERA_RLS1' AS 'Source'
FROM   [ERA_RLS1].[IncidentTasks] AS a
       INNER JOIN
       [ERA_RLS1].[Communities] AS b
       ON a.CommunityId = b.Id
UNION ALL
SELECT DISTINCT CONVERT (NVARCHAR (40), era_taskid) AS DimTaskBK,
                era_name AS 'Task Number',
                'ERA Dynamics' AS 'Source'
FROM   [era_stage].[era_task];


GO
PRINT N'Altering [dbo].[AdmLoadControl]...';


GO
ALTER TABLE [dbo].[AdmLoadControl]
    ADD [IsFullLoad] BIT DEFAULT ((0)) NULL;


GO
PRINT N'Altering [era_stage].[era_essfilenote]...';


GO
ALTER TABLE [era_stage].[era_essfilenote]
    ADD [era_important]     BIT            NULL,
        [era_importantname] NVARCHAR (255) NULL;


GO
PRINT N'Altering [era_stage].[era_etransfertransaction]...';


GO
ALTER TABLE [era_stage].[era_etransfertransaction]
    ADD [era_settaskflag]     BIT              NULL,
        [era_settaskflagname] NVARCHAR (255)   NULL,
        [era_task]            UNIQUEIDENTIFIER NULL,
        [era_taskname]        NVARCHAR (100)   NULL;


GO
PRINT N'Altering [era_stage].[era_evacuationfile]...';


GO
ALTER TABLE [era_stage].[era_evacuationfile]
    ADD [era_totalhouseholdmembers]       INT      NULL,
        [era_totalhouseholdmembers_date]  DATETIME NULL,
        [era_totalhouseholdmembers_state] INT      NULL;


GO
PRINT N'Altering [era_stage].[era_evacueesupport]...';


GO
ALTER TABLE [era_stage].[era_evacueesupport]
    ADD [era_etransfercontactemail] NVARCHAR (100)   NULL,
        [era_selfservesupport]      BIT              NULL,
        [era_selfservesupportname]  NVARCHAR (255)   NULL,
        [era_settaskflag]           BIT              NULL,
        [era_settaskflagname]       NVARCHAR (255)   NULL,
        [era_task]                  UNIQUEIDENTIFIER NULL,
        [era_taskname]              NVARCHAR (255)   NULL;


GO
PRINT N'Altering [era_stage].[era_householdmember]...';


GO
ALTER TABLE [era_stage].[era_householdmember]
    ADD [era_emailaddress]    NVARCHAR (100) NULL,
        [era_telephonemobile] NVARCHAR (100) NULL;


GO
PRINT N'Altering [era_stage].[era_needassessment]...';


GO
ALTER TABLE [era_stage].[era_needassessment]
    ADD [era_eligibilitycheck]     UNIQUEIDENTIFIER NULL,
        [era_eligibilitycheckname] NVARCHAR (255)   NULL,
        [era_shelteroptions]       INT              NULL,
        [era_shelteroptionsname]   NVARCHAR (255)   NULL,
        [era_tasknumber]           UNIQUEIDENTIFIER NULL,
        [era_tasknumbername]       NVARCHAR (100)   NULL;


GO
PRINT N'Altering [era_stage].[era_support]...';


GO
ALTER TABLE [era_stage].[era_support]
    ADD [era_enabledforselfservename]    NVARCHAR (255)   NULL,
        [era_extensionavailable]         BIT              NULL,
        [era_extensionavailablename]     NVARCHAR (255)   NULL,
        [era_selfservedollarlimit]       NUMERIC (38, 4)  NULL,
        [era_selfservedollarlimit_base]  NUMERIC (38, 4)  NULL,
        [era_selfservenumberofdayslimit] INT              NULL,
        [exchangerate]                   NUMERIC (38, 10) NULL,
        [era_enabledforselfserve]        BIT              NULL,
        [transactioncurrencyid]          UNIQUEIDENTIFIER NULL,
        [transactioncurrencyidname]      NVARCHAR (100)   NULL;


GO
PRINT N'Altering [era_stage].[era_task]...';


GO
ALTER TABLE [era_stage].[era_task]
    ADD [era_eligibilitycheck]                  UNIQUEIDENTIFIER NULL,
        [era_eligibilitycheckname]              NVARCHAR (100)   NULL,
        [era_eventlevelid]                      UNIQUEIDENTIFIER NULL,
        [era_eventlevelidname]                  NVARCHAR (100)   NULL,
        [era_incidentcategory]                  UNIQUEIDENTIFIER NULL,
        [era_incidentcategoryname]              NVARCHAR (100)   NULL,
        [era_selfservesupportlimitscreated]     BIT              NULL,
        [era_selfservesupportlimitscreatedname] NVARCHAR (255)   NULL,
        [era_selfservetoggle]                   BIT              NULL,
        [era_selfservetogglename]               NVARCHAR (255)   NULL,
        [era_supportextensionlimits]            BIT              NULL,
        [era_supportextensionlimitscreated]     BIT              NULL,
        [era_supportextensionlimitscreatedname] NVARCHAR (255)   NULL,
        [era_supportextensionlimitsname]        NVARCHAR (255)   NULL,
        [era_supportpathwayid]                  UNIQUEIDENTIFIER NULL,
        [era_supportpathwayidname]              NVARCHAR (100)   NULL,
        [era_createselfservesupportlimits]      BIT              NULL,
        [era_createselfservesupportlimitsname]  NVARCHAR (255)   NULL;


GO
PRINT N'Creating [era_stage].[era_bscaddress]...';


GO
CREATE TABLE [era_stage].[era_bscaddress] (
    [createdby]                  UNIQUEIDENTIFIER NULL,
    [createdbyname]              NVARCHAR (200)   NULL,
    [createdbyyominame]          NVARCHAR (200)   NULL,
    [createdon]                  DATETIME         NULL,
    [createdonbehalfby]          UNIQUEIDENTIFIER NULL,
    [createdonbehalfbyname]      NVARCHAR (200)   NULL,
    [createdonbehalfbyyominame]  NVARCHAR (200)   NULL,
    [era_address]                NVARCHAR (100)   NULL,
    [era_bcscaddressid]          UNIQUEIDENTIFIER NOT NULL,
    [era_geocodescore]           INT              NULL,
    [era_latitude]               NUMERIC (38, 10) NULL,
    [era_longitude]              NUMERIC (38, 10) NULL,
    [era_locality]               NVARCHAR (100)   NULL,
    [era_name]                   NVARCHAR (100)   NULL,
    [era_postalcode]             NVARCHAR (100)   NULL,
    [era_province]               NVARCHAR (100)   NULL,
    [era_registrant]             UNIQUEIDENTIFIER NULL,
    [era_registrantname]         NVARCHAR (160)   NULL,
    [era_registrantyominame]     NVARCHAR (450)   NULL,
    [era_resolvedaddress]        NVARCHAR (100)   NULL,
    [importsequencenumber]       INT              NULL,
    [modifiedby]                 UNIQUEIDENTIFIER NULL,
    [modifiedbyname]             NVARCHAR (200)   NULL,
    [modifiedbyyominame]         NVARCHAR (200)   NULL,
    [modifiedon]                 DATETIME         NULL,
    [modifiedonbehalfby]         UNIQUEIDENTIFIER NULL,
    [modifiedonbehalfbyname]     NVARCHAR (200)   NULL,
    [modifiedonbehalfbyyominame] NVARCHAR (200)   NULL,
    [overriddencreatedon]        DATETIME         NULL,
    [ownerid]                    UNIQUEIDENTIFIER NULL,
    [owneridname]                NVARCHAR (200)   NULL,
    [owneridtype]                NVARCHAR (64)    NULL,
    [owneridyominame]            NVARCHAR (200)   NULL,
    [owningbusinessunit]         UNIQUEIDENTIFIER NULL,
    [owningteam]                 UNIQUEIDENTIFIER NULL,
    [owninguser]                 UNIQUEIDENTIFIER NULL,
    [statecode]                  INT              NULL,
    [statecodename]              NVARCHAR (255)   NULL,
    [statuscode]                 INT              NULL,
    [statuscodename]             NVARCHAR (255)   NULL,
    [timezoneruleversionnumber]  INT              NULL,
    [utcconversiontimezonecode]  INT              NULL,
    [versionnumber]              BIGINT           NULL,
    [Created_Load_Id]            INT              NULL,
    [Modified_Load_Id]           INT              NULL,
    CONSTRAINT [PK_era_bscaddress] PRIMARY KEY CLUSTERED ([era_bcscaddressid] ASC)
);


GO
PRINT N'Creating [era_stage].[era_eligibilitycheck]...';


GO
CREATE TABLE [era_stage].[era_eligibilitycheck] (
    [createdby]                  UNIQUEIDENTIFIER NULL,
    [createdbyname]              NVARCHAR (200)   NULL,
    [createdbyyominame]          NVARCHAR (200)   NULL,
    [createdon]                  DATETIME         NULL,
    [createdonbehalfby]          UNIQUEIDENTIFIER NULL,
    [createdonbehalfbyname]      NVARCHAR (200)   NULL,
    [createdonbehalfbyyominame]  NVARCHAR (200)   NULL,
    [era_bcscaddress]            UNIQUEIDENTIFIER NULL,
    [era_bcscaddressname]        NVARCHAR (100)   NULL,
    [era_eligibilitycheckid]     UNIQUEIDENTIFIER NOT NULL,
    [era_eligibilityperiodfrom]  DATETIME         NULL,
    [era_eligibilityperiodto]    DATETIME         NULL,
    [era_essfile]                UNIQUEIDENTIFIER NULL,
    [era_essfilename]            NVARCHAR (100)   NULL,
    [era_iseligible]             INT              NULL,
    [era_iseligiblename]         NVARCHAR (255)   NULL,
    [era_name]                   NVARCHAR (100)   NULL,
    [era_needsassessment]        UNIQUEIDENTIFIER NULL,
    [era_needsassessmentname]    NVARCHAR (100)   NULL,
    [era_reason]                 NVARCHAR (500)   NULL,
    [era_selfserveoptout]        BIT              NULL,
    [era_selfserveoptoutname]    NVARCHAR (255)   NULL,
    [era_task]                   UNIQUEIDENTIFIER NULL,
    [era_taskname]               NVARCHAR (100)   NULL,
    [importsequencenumber]       INT              NULL,
    [modifiedby]                 UNIQUEIDENTIFIER NULL,
    [modifiedbyname]             NVARCHAR (200)   NULL,
    [modifiedbyyominame]         NVARCHAR (200)   NULL,
    [modifiedon]                 DATETIME         NULL,
    [modifiedonbehalfby]         UNIQUEIDENTIFIER NULL,
    [modifiedonbehalfbyname]     NVARCHAR (200)   NULL,
    [modifiedonbehalfbyyominame] NVARCHAR (200)   NULL,
    [overriddencreatedon]        DATETIME         NULL,
    [ownerid]                    UNIQUEIDENTIFIER NULL,
    [owneridname]                NVARCHAR (200)   NULL,
    [owneridtype]                NVARCHAR (64)    NULL,
    [owneridyominame]            NVARCHAR (200)   NULL,
    [owningbusinessunit]         UNIQUEIDENTIFIER NULL,
    [owningteam]                 UNIQUEIDENTIFIER NULL,
    [owninguser]                 UNIQUEIDENTIFIER NULL,
    [statecode]                  INT              NULL,
    [statecodename]              NVARCHAR (255)   NULL,
    [statuscode]                 INT              NULL,
    [statuscodename]             NVARCHAR (255)   NULL,
    [timezoneruleversionnumber]  INT              NULL,
    [utcconversiontimezonecode]  INT              NULL,
    [versionnumber]              BIGINT           NULL,
    [Created_Load_Id]            INT              NULL,
    [Modified_Load_Id]           INT              NULL,
    CONSTRAINT [PK_era_eligibilitycheck] PRIMARY KEY CLUSTERED ([era_eligibilitycheckid] ASC)
);


GO
PRINT N'Creating [era_stage].[era_eligiblesupport]...';


GO
CREATE TABLE [era_stage].[era_eligiblesupport] (
    [createdby]                     UNIQUEIDENTIFIER NULL,
    [createdbyname]                 NVARCHAR (200)   NULL,
    [createdbyyominame]             NVARCHAR (200)   NULL,
    [createdon]                     DATETIME         NULL,
    [createdonbehalfby]             UNIQUEIDENTIFIER NULL,
    [createdonbehalfbyname]         NVARCHAR (200)   NULL,
    [createdonbehalfbyyominame]     NVARCHAR (200)   NULL,
    [era_eligibilitycheck]          UNIQUEIDENTIFIER NULL,
    [era_eligibilitycheckname]      NVARCHAR (100)   NULL,
    [era_eligiblesupportid]         UNIQUEIDENTIFIER NOT NULL,
    [era_name]                      NVARCHAR (100)   NULL,
    [era_selfservesupportlimit]     UNIQUEIDENTIFIER NULL,
    [era_selfservesupportlimitname] NVARCHAR (100)   NULL,
    [era_supporteligible]           INT              NULL,
    [era_supporteligiblename]       NVARCHAR (255)   NULL,
    [era_supportlimitid]            UNIQUEIDENTIFIER NULL,
    [era_supportlimitidname]        NVARCHAR (100)   NULL,
    [importsequencenumber]          INT              NULL,
    [modifiedby]                    UNIQUEIDENTIFIER NULL,
    [modifiedbyname]                NVARCHAR (200)   NULL,
    [modifiedbyyominame]            NVARCHAR (200)   NULL,
    [modifiedon]                    DATETIME         NULL,
    [modifiedonbehalfby]            UNIQUEIDENTIFIER NULL,
    [modifiedonbehalfbyname]        NVARCHAR (200)   NULL,
    [modifiedonbehalfbyyominame]    NVARCHAR (200)   NULL,
    [overriddencreatedon]           DATETIME         NULL,
    [ownerid]                       UNIQUEIDENTIFIER NULL,
    [owneridname]                   NVARCHAR (200)   NULL,
    [owneridtype]                   NVARCHAR (64)    NULL,
    [owneridyominame]               NVARCHAR (200)   NULL,
    [owningbusinessunit]            UNIQUEIDENTIFIER NULL,
    [owningteam]                    UNIQUEIDENTIFIER NULL,
    [owninguser]                    UNIQUEIDENTIFIER NULL,
    [statecode]                     INT              NULL,
    [statecodename]                 NVARCHAR (255)   NULL,
    [statuscode]                    INT              NULL,
    [statuscodename]                NVARCHAR (255)   NULL,
    [timezoneruleversionnumber]     INT              NULL,
    [utcconversiontimezonecode]     INT              NULL,
    [versionnumber]                 BIGINT           NULL,
    [Created_Load_Id]               INT              NULL,
    [Modified_Load_Id]              INT              NULL,
    CONSTRAINT [PK_era_eligiblesupport] PRIMARY KEY CLUSTERED ([era_eligiblesupportid] ASC)
);


GO
PRINT N'Creating [era_stage].[era_essincidentcategoryidentifier]...';


GO
CREATE TABLE [era_stage].[era_essincidentcategoryidentifier] (
    [createdby]                           UNIQUEIDENTIFIER NULL,
    [createdbyname]                       NVARCHAR (200)   NULL,
    [createdbyyominame]                   NVARCHAR (200)   NULL,
    [createdon]                           DATETIME         NULL,
    [createdonbehalfby]                   UNIQUEIDENTIFIER NULL,
    [createdonbehalfbyname]               NVARCHAR (200)   NULL,
    [createdonbehalfbyyominame]           NVARCHAR (200)   NULL,
    [era_essincidentcategoryidentifierid] UNIQUEIDENTIFIER NOT NULL,
    [era_name]                            NVARCHAR (100)   NULL,
    [importsequencenumber]                INT              NULL,
    [modifiedby]                          UNIQUEIDENTIFIER NULL,
    [modifiedbyname]                      NVARCHAR (200)   NULL,
    [modifiedbyyominame]                  NVARCHAR (200)   NULL,
    [modifiedon]                          DATETIME         NULL,
    [modifiedonbehalfby]                  UNIQUEIDENTIFIER NULL,
    [modifiedonbehalfbyname]              NVARCHAR (200)   NULL,
    [modifiedonbehalfbyyominame]          NVARCHAR (200)   NULL,
    [overriddencreatedon]                 DATETIME         NULL,
    [ownerid]                             UNIQUEIDENTIFIER NULL,
    [owneridname]                         NVARCHAR (200)   NULL,
    [owneridtype]                         NVARCHAR (64)    NULL,
    [owneridyominame]                     NVARCHAR (200)   NULL,
    [owningbusinessunit]                  UNIQUEIDENTIFIER NULL,
    [owningteam]                          UNIQUEIDENTIFIER NULL,
    [owninguser]                          UNIQUEIDENTIFIER NULL,
    [statecode]                           INT              NULL,
    [statecodename]                       NVARCHAR (255)   NULL,
    [statuscode]                          INT              NULL,
    [statuscodename]                      NVARCHAR (255)   NULL,
    [timezoneruleversionnumber]           INT              NULL,
    [utcconversiontimezonecode]           INT              NULL,
    [versionnumber]                       BIGINT           NULL,
    [Created_Load_Id]                     INT              NULL,
    [Modified_Load_Id]                    INT              NULL,
    CONSTRAINT [PK_era_essincidentcategoryidentifier] PRIMARY KEY CLUSTERED ([era_essincidentcategoryidentifierid] ASC)
);


GO
PRINT N'Creating [era_stage].[era_eventlevel]...';


GO
CREATE TABLE [era_stage].[era_eventlevel] (
    [createdby]                  UNIQUEIDENTIFIER NULL,
    [createdbyname]              NVARCHAR (200)   NULL,
    [createdbyyominame]          NVARCHAR (200)   NULL,
    [createdon]                  DATETIME         NULL,
    [createdonbehalfby]          UNIQUEIDENTIFIER NULL,
    [createdonbehalfbyname]      NVARCHAR (200)   NULL,
    [createdonbehalfbyyominame]  NVARCHAR (200)   NULL,
    [era_eventlevelid]           UNIQUEIDENTIFIER NOT NULL,
    [era_name]                   NVARCHAR (100)   NULL,
    [importsequencenumber]       INT              NULL,
    [modifiedby]                 UNIQUEIDENTIFIER NULL,
    [modifiedbyname]             NVARCHAR (200)   NULL,
    [modifiedbyyominame]         NVARCHAR (200)   NULL,
    [modifiedon]                 DATETIME         NULL,
    [modifiedonbehalfby]         UNIQUEIDENTIFIER NULL,
    [modifiedonbehalfbyname]     NVARCHAR (200)   NULL,
    [modifiedonbehalfbyyominame] NVARCHAR (200)   NULL,
    [overriddencreatedon]        DATETIME         NULL,
    [ownerid]                    UNIQUEIDENTIFIER NULL,
    [owneridname]                NVARCHAR (200)   NULL,
    [owneridtype]                NVARCHAR (64)    NULL,
    [owneridyominame]            NVARCHAR (200)   NULL,
    [owningbusinessunit]         UNIQUEIDENTIFIER NULL,
    [owningteam]                 UNIQUEIDENTIFIER NULL,
    [owninguser]                 UNIQUEIDENTIFIER NULL,
    [statecode]                  INT              NULL,
    [statecodename]              NVARCHAR (255)   NULL,
    [statuscode]                 INT              NULL,
    [statuscodename]             NVARCHAR (255)   NULL,
    [timezoneruleversionnumber]  INT              NULL,
    [utcconversiontimezonecode]  INT              NULL,
    [versionnumber]              BIGINT           NULL,
    [Created_Load_Id]            INT              NULL,
    [Modified_Load_Id]           INT              NULL,
    CONSTRAINT [PK_era_eventlevel] PRIMARY KEY CLUSTERED ([era_eventlevelid] ASC)
);


GO
PRINT N'Creating [era_stage].[era_portalaccessauditlogs]...';


GO
CREATE TABLE [era_stage].[era_portalaccessauditlogs] (
    [createdby]                   UNIQUEIDENTIFIER NULL,
    [createdbyname]               NVARCHAR (200)   NULL,
    [createdbyyominame]           NVARCHAR (200)   NULL,
    [createdon]                   DATETIME         NULL,
    [createdonbehalfby]           UNIQUEIDENTIFIER NULL,
    [createdonbehalfbyname]       NVARCHAR (200)   NULL,
    [createdonbehalfbyyominame]   NVARCHAR (200)   NULL,
    [era_portalaccessauditlogsid] UNIQUEIDENTIFIER NOT NULL,
    [era_datetimeaccessed]        DATETIME         NULL,
    [era_essfilenumber]           UNIQUEIDENTIFIER NULL,
    [era_essfilenumbername]       NVARCHAR (100)   NULL,
    [era_evacueeprofile]          UNIQUEIDENTIFIER NULL,
    [era_evacueeprofilename]      NVARCHAR (160)   NULL,
    [era_evacueeprofileyominame]  NVARCHAR (450)   NULL,
    [era_fileaccessreason]        INT              NULL,
    [era_fileaccessreasonname]    NVARCHAR (255)   NULL,
    [era_name]                    NVARCHAR (100)   NULL,
    [era_responder]               UNIQUEIDENTIFIER NULL,
    [era_respondername]           NVARCHAR (100)   NULL,
    [importsequencenumber]        INT              NULL,
    [modifiedby]                  UNIQUEIDENTIFIER NULL,
    [modifiedbyname]              NVARCHAR (200)   NULL,
    [modifiedbyyominame]          NVARCHAR (200)   NULL,
    [modifiedon]                  DATETIME         NULL,
    [modifiedonbehalfby]          UNIQUEIDENTIFIER NULL,
    [modifiedonbehalfbyname]      NVARCHAR (200)   NULL,
    [modifiedonbehalfbyyominame]  NVARCHAR (200)   NULL,
    [overriddencreatedon]         DATETIME         NULL,
    [ownerid]                     UNIQUEIDENTIFIER NULL,
    [owneridname]                 NVARCHAR (200)   NULL,
    [owneridtype]                 NVARCHAR (64)    NULL,
    [owneridyominame]             NVARCHAR (200)   NULL,
    [owningbusinessunit]          UNIQUEIDENTIFIER NULL,
    [owningteam]                  UNIQUEIDENTIFIER NULL,
    [owninguser]                  UNIQUEIDENTIFIER NULL,
    [statecode]                   INT              NULL,
    [statecodename]               NVARCHAR (255)   NULL,
    [statuscode]                  INT              NULL,
    [statuscodename]              NVARCHAR (255)   NULL,
    [timezoneruleversionnumber]   INT              NULL,
    [utcconversiontimezonecode]   INT              NULL,
    [versionnumber]               BIGINT           NULL,
    [Created_Load_Id]             INT              NULL,
    [Modified_Load_Id]            INT              NULL,
    CONSTRAINT [PK_era_portalaccessauditlogs] PRIMARY KEY CLUSTERED ([era_portalaccessauditlogsid] ASC)
);


GO
PRINT N'Creating [era_stage].[era_selfservesupportlimits]...';


GO
CREATE TABLE [era_stage].[era_selfservesupportlimits] (
    [createdby]                      UNIQUEIDENTIFIER NULL,
    [createdbyname]                  NVARCHAR (200)   NULL,
    [createdbyyominame]              NVARCHAR (200)   NULL,
    [createdon]                      DATETIME         NULL,
    [createdonbehalfby]              UNIQUEIDENTIFIER NULL,
    [createdonbehalfbyname]          NVARCHAR (200)   NULL,
    [createdonbehalfbyyominame]      NVARCHAR (200)   NULL,
    [era_selfservesupportlimitsid]   UNIQUEIDENTIFIER NOT NULL,
    [era_dollarlimit]                NUMERIC (38, 4)  NULL,
    [era_dollarlimit_base]           NUMERIC (38, 4)  NULL,
    [era_extensionavailable]         BIT              NULL,
    [era_extensionavailablename]     NVARCHAR (255)   NULL,
    [era_name]                       NVARCHAR (100)   NULL,
    [era_supportlimitenddate]        DATETIME         NULL,
    [era_supportlimitenddatedefault] DATETIME         NULL,
    [era_supportlimitstartdate]      DATETIME         NULL,
    [era_supporttype]                UNIQUEIDENTIFIER NULL,
    [era_supporttypename]            NVARCHAR (100)   NULL,
    [era_supporttypeoption]          INT              NULL,
    [era_supporttypeoptionname]      NVARCHAR (255)   NULL,
    [era_task]                       UNIQUEIDENTIFIER NULL,
    [era_taskenddate]                DATETIME         NULL,
    [era_taskname]                   NVARCHAR (100)   NULL,
    [era_taskstartdate]              DATETIME         NULL,
    [exchangerate]                   NUMERIC (38, 4)  NULL,
    [transactioncurrencyid]          UNIQUEIDENTIFIER NULL,
    [transactioncurrencyidname]      NVARCHAR (100)   NULL,
    [importsequencenumber]           INT              NULL,
    [modifiedby]                     UNIQUEIDENTIFIER NULL,
    [modifiedbyname]                 NVARCHAR (200)   NULL,
    [modifiedbyyominame]             NVARCHAR (200)   NULL,
    [modifiedon]                     DATETIME         NULL,
    [modifiedonbehalfby]             UNIQUEIDENTIFIER NULL,
    [modifiedonbehalfbyname]         NVARCHAR (200)   NULL,
    [modifiedonbehalfbyyominame]     NVARCHAR (200)   NULL,
    [overriddencreatedon]            DATETIME         NULL,
    [ownerid]                        UNIQUEIDENTIFIER NULL,
    [owneridname]                    NVARCHAR (200)   NULL,
    [owneridtype]                    NVARCHAR (64)    NULL,
    [owneridyominame]                NVARCHAR (200)   NULL,
    [owningbusinessunit]             UNIQUEIDENTIFIER NULL,
    [owningteam]                     UNIQUEIDENTIFIER NULL,
    [owninguser]                     UNIQUEIDENTIFIER NULL,
    [statecode]                      INT              NULL,
    [statecodename]                  NVARCHAR (255)   NULL,
    [statuscode]                     INT              NULL,
    [statuscodename]                 NVARCHAR (255)   NULL,
    [timezoneruleversionnumber]      INT              NULL,
    [utcconversiontimezonecode]      INT              NULL,
    [versionnumber]                  BIGINT           NULL,
    [Created_Load_Id]                INT              NULL,
    [Modified_Load_Id]               INT              NULL,
    CONSTRAINT [PK_era_selfservesupportlimits] PRIMARY KEY CLUSTERED ([era_selfservesupportlimitsid] ASC)
);


GO
PRINT N'Creating [era_stage].[era_supportlimit]...';


GO
CREATE TABLE [era_stage].[era_supportlimit] (
    [createdby]                  UNIQUEIDENTIFIER NULL,
    [createdbyname]              NVARCHAR (200)   NULL,
    [createdbyyominame]          NVARCHAR (200)   NULL,
    [createdon]                  DATETIME         NULL,
    [createdonbehalfby]          UNIQUEIDENTIFIER NULL,
    [createdonbehalfbyname]      NVARCHAR (200)   NULL,
    [createdonbehalfbyyominame]  NVARCHAR (200)   NULL,
    [era_supportlimitid]         UNIQUEIDENTIFIER NOT NULL,
    [era_dollarlimit]            NUMERIC (38, 4)  NULL,
    [era_dollarlimit_base]       NUMERIC (38, 4)  NULL,
    [era_extensionavailable]     BIT              NULL,
    [era_extensionavailablename] NVARCHAR (255)   NULL,
    [era_name]                   NVARCHAR (100)   NULL,
    [era_supportlimitenddate]    DATETIME         NULL,
    [era_supportlimitstartdate]  DATETIME         NULL,
    [era_supporttype]            UNIQUEIDENTIFIER NULL,
    [era_supporttypename]        NVARCHAR (100)   NULL,
    [era_supporttypeoption]      INT              NULL,
    [era_supporttypeoptionname]  NVARCHAR (255)   NULL,
    [era_task]                   UNIQUEIDENTIFIER NULL,
    [era_taskenddate]            DATETIME         NULL,
    [era_taskname]               NVARCHAR (100)   NULL,
    [era_taskstartdate]          DATETIME         NULL,
    [exchangerate]               NUMERIC (38, 4)  NULL,
    [transactioncurrencyid]      UNIQUEIDENTIFIER NULL,
    [transactioncurrencyidname]  NVARCHAR (100)   NULL,
    [importsequencenumber]       INT              NULL,
    [modifiedby]                 UNIQUEIDENTIFIER NULL,
    [modifiedbyname]             NVARCHAR (200)   NULL,
    [modifiedbyyominame]         NVARCHAR (200)   NULL,
    [modifiedon]                 DATETIME         NULL,
    [modifiedonbehalfby]         UNIQUEIDENTIFIER NULL,
    [modifiedonbehalfbyname]     NVARCHAR (200)   NULL,
    [modifiedonbehalfbyyominame] NVARCHAR (200)   NULL,
    [overriddencreatedon]        DATETIME         NULL,
    [ownerid]                    UNIQUEIDENTIFIER NULL,
    [owneridname]                NVARCHAR (200)   NULL,
    [owneridtype]                NVARCHAR (64)    NULL,
    [owneridyominame]            NVARCHAR (200)   NULL,
    [owningbusinessunit]         UNIQUEIDENTIFIER NULL,
    [owningteam]                 UNIQUEIDENTIFIER NULL,
    [owninguser]                 UNIQUEIDENTIFIER NULL,
    [statecode]                  INT              NULL,
    [statecodename]              NVARCHAR (255)   NULL,
    [statuscode]                 INT              NULL,
    [statuscodename]             NVARCHAR (255)   NULL,
    [timezoneruleversionnumber]  INT              NULL,
    [utcconversiontimezonecode]  INT              NULL,
    [versionnumber]              BIGINT           NULL,
    [Created_Load_Id]            INT              NULL,
    [Modified_Load_Id]           INT              NULL,
    CONSTRAINT [PK_era_supportlimit] PRIMARY KEY CLUSTERED ([era_supportlimitid] ASC)
);


GO
PRINT N'Creating [era_stage].[era_supportpathway]...';


GO
CREATE TABLE [era_stage].[era_supportpathway] (
    [createdby]                  UNIQUEIDENTIFIER NULL,
    [createdbyname]              NVARCHAR (200)   NULL,
    [createdbyyominame]          NVARCHAR (200)   NULL,
    [createdon]                  DATETIME         NULL,
    [createdonbehalfby]          UNIQUEIDENTIFIER NULL,
    [createdonbehalfbyname]      NVARCHAR (200)   NULL,
    [createdonbehalfbyyominame]  NVARCHAR (200)   NULL,
    [era_supportpathwayid]       UNIQUEIDENTIFIER NOT NULL,
    [era_name]                   NVARCHAR (100)   NULL,
    [importsequencenumber]       INT              NULL,
    [modifiedby]                 UNIQUEIDENTIFIER NULL,
    [modifiedbyname]             NVARCHAR (200)   NULL,
    [modifiedbyyominame]         NVARCHAR (200)   NULL,
    [modifiedon]                 DATETIME         NULL,
    [modifiedonbehalfby]         UNIQUEIDENTIFIER NULL,
    [modifiedonbehalfbyname]     NVARCHAR (200)   NULL,
    [modifiedonbehalfbyyominame] NVARCHAR (200)   NULL,
    [overriddencreatedon]        DATETIME         NULL,
    [ownerid]                    UNIQUEIDENTIFIER NULL,
    [owneridname]                NVARCHAR (200)   NULL,
    [owneridtype]                NVARCHAR (64)    NULL,
    [owneridyominame]            NVARCHAR (200)   NULL,
    [owningbusinessunit]         UNIQUEIDENTIFIER NULL,
    [owningteam]                 UNIQUEIDENTIFIER NULL,
    [owninguser]                 UNIQUEIDENTIFIER NULL,
    [statecode]                  INT              NULL,
    [statecodename]              NVARCHAR (255)   NULL,
    [statuscode]                 INT              NULL,
    [statuscodename]             NVARCHAR (255)   NULL,
    [timezoneruleversionnumber]  INT              NULL,
    [utcconversiontimezonecode]  INT              NULL,
    [versionnumber]              BIGINT           NULL,
    [Created_Load_Id]            INT              NULL,
    [Modified_Load_Id]           INT              NULL,
    CONSTRAINT [PK_era_supportpathway] PRIMARY KEY CLUSTERED ([era_supportpathwayid] ASC)
);


GO

PRINT N'Adding schema binding to [era_rpt].[DimReferralDetails]...';


GO

ALTER   VIEW [era_rpt].[DimReferralDetails]
WITH SCHEMABINDING
as
SELECT DimReferralDetailBK
      ,EvacuationFileId
	  ,ReferralStatus
	  ,Purchaser
	  ,Comments
	  ,Requestor
	  ,Source
FROM (
	select  
		 convert(nvarchar(40),D.Id) as 'DimReferralDetailBK'
		 , TRY_CONVERT(BIGINT,D.RegistrationId) as EvacuationFileId
		 , CASE D.Active WHEN 1 THEN 'Active' 
						 WHEN 0 THEN 'Inactive'
						 ELSE 'Unknown'
		  END as 'ReferralStatus'
		 , D.Purchaser
		 , D.Comments 
		 , E.LastName + ', ' + E.FirstName as 'Requestor'
		 , 'ERA_RLS1' as 'Source'
	from [ERA_RLS1].[IncidentTasks] a
	inner join [ERA_RLS1].[EvacueeRegistrations] b 
	on a.Id = b.IncidentTaskId
	inner join [ERA_RLS1].[Communities] c
		on a.CommunityId = c.Id
	JOIN [ERA_RLS1].[Referrals] d
	  on d.RegistrationId = b.EssFileNumber
	LEFT JOIN ERA_RLS1.Evacuees E
	  ON e.RegistrationId =  D.RegistrationId 
	WHERE E.EvacueeTypeCode  = 'HOH'
	UNION
	select  convert(nvarchar(40),es.era_evacueesupportid) as 'DimReferralDetailBK'
		, TRY_CONVERT(BIGINT,era_evacuationfileidname) as EvacuationFileId
		, es.statuscodename as ReferralStatus
		,era_purchaserofgoods as Purchaser
		, convert(nvarchar(4000), era_approveditems) + ' / ' +  convert(nvarchar(4000), era_suppliernote) as Comments
		,ef.era_registrantname as Requestor
		, 'ERA Dynamics' as 'Source'
		--, era_s
	from [era_stage].[era_evacueesupport] es
	left join [era_stage].[era_evacuationfile] ef
		on es.era_evacuationfileid = ef.era_evacuationfileid
		left join [era_stage].[era_task] t
			on ef.era_taskid = t.era_taskid
		where es.era_supplierid is not null
) a
WHERE Requestor IS NOT NULL 
AND Requestor NOT LIKE '%AUTOTEST%'
GO
PRINT N'Adding schema binding to [era_rpt].[FactEvacuees]...';


GO





ALTER VIEW [era_rpt].[FactEvacuees]
WITH SCHEMABINDING 
AS
SELECT  DISTINCT 
		LTRIM(RTRIM(convert(nvarchar(20), E.RegistrationId))) + '-' + LTRIM(RTRIM(convert(nvarchar(20), E.EvacueeSequenceNumber))) as FactEvacueesBK
	  , E.LastName + ', ' + E.FirstName as Name
	  , E.EvacueeTypeCode
	  , convert(nvarchar(40), IT.TaskNumber) as DimTaskBK
	  , CONVERT(DATE, IT.TaskNumberStartDate) as TaskStartDate
	  , CONVERT(DATE, IT.TaskNumberEndDate) as TaskEndDate
	  , C.Name as DimLocationBK_Task
	 , convert(NVARCHAR(40), C.Name) as DimLocationBK_EvacuatedFrom
	 , -1 as DimEvacuationFileStatusBK
	 , convert(nvarchar(40), ER.ESSFileNumber) as DimEvacuationFileBK
	  , 'ERA_RLS1' as 'Source'
FROM [ERA_RLS1].[IncidentTasks] IT
JOIN [ERA_RLS1].[EvacueeRegistrations] ER 
  ON IT.Id = ER.IncidentTaskId
JOIN ERA_RLS1.Evacuees E
  ON E.RegistrationId = ER.EssFileNumber		  
JOIN [ERA_RLS1].[Communities] C
  ON IT.CommunityId = C.Id
UNION ALL
select DISTINCT 
       CONVERT(NVARCHAR(40),hhm.era_householdmemberid) as FactEvacueesBK
	    , hhm.era_lastname + ', ' + hhm.era_firstname as 'Name'
       , NULL as 'EvacueeTypeCode'
	 , convert(nvarchar(40), et.era_taskid) as DimTaskBK
	 , CONVERT(DATE, et.era_taskstartdate) as era_taskstartdate
	 , CONVERT(DATE, et.era_taskenddate) as era_taskenddate
--	 , et.era_taskid
	 , convert(nvarchar(40), et.era_jurisdictionid)  as DimLocationBK_task
	 , convert(nvarchar(40), ef.era_evacuatedfromid) as DimLocationBK_EvacuatedFrom
	 , ef.era_essfilestatus as DimEvacuationFileStatusBK
	 ,convert(nvarchar(40), ef.era_evacuationfileid) as DimEvacuationFileBK
	 , 'ERA Dynamics' as 'Source'
from [era_stage].era_householdmember hhm
JOIN [era_stage].era_evacuationfile ef
ON hhm.era_evacuationfileid = ef.era_evacuationfileid
JOIN [era_stage].[era_task] et
  ON et.era_taskid  =ef.era_taskid
GO
PRINT N'Adding schema binding to [era_rpt].[FactReferralEvacuees]...';


GO

ALTER   VIEW [era_rpt].[FactReferralEvacuees]
WITH SCHEMABINDING
AS
Select distinct LTRIM(RTRIM(convert(nvarchar(10), R.RegistrationId))) + '-' + LTRIM(RTRIM(convert(nvarchar(10), R.EvacueeId))) as FactReferralEvacueeBK
	, convert(nvarchar(40), R.ReferralId) as 'DimReferralDetailBK'
	 , E.LastName + ', ' + E.FirstName  as Name
	 , 'ERA_RLS1' as 'Source'
FROM ERA_RLS1.ReferralEvacuees R
LEFT JOIN ERA_RLS1.Evacuees E
ON LTRIM(RTRIM(convert(nvarchar(10), R.RegistrationId))) + '-' + LTRIM(RTRIM(convert(nvarchar(10), R.EvacueeId))) =  LTRIM(RTRIM(convert(nvarchar(10), E.RegistrationId))) + '-' + LTRIM(RTRIM(convert(nvarchar(10), E.EvacueeSequenceNumber)))
union
select DISTINCT 
       CONVERT(NVARCHAR(40),hhm.era_householdmemberid) as FactReferralEvacueesBK
	   ,convert(nvarchar(40),es.era_evacueesupportid) as 'DimReferralDetailBK'
	    , hhm.era_lastname + ', ' + hhm.era_firstname as 'Name'
	 , 'ERA Dynamics' as 'Source'
from [era_stage].era_householdmember hhm
JOIN [era_stage].era_evacuationfile ef
ON hhm.era_evacuationfileid = ef.era_evacuationfileid
JOIN [era_stage].[era_evacueesupport] es
ON ef.era_evacuationfileid = es.era_evacuationfileid
GO
PRINT N'Adding schema binding to [era_rpt].[FactReferrals]...';


GO



ALTER VIEW [era_rpt].[FactReferrals]
WITH SCHEMABINDING
as
select  convert(nvarchar(40), D.Id) as 'FactReferralBK'
	, convert(nvarchar(40),D.Id) as 'DimReferralDetailBK'
	, convert(nvarchar(40), D.Id) as ReferralID
     --, D.RegistrationId as era_evacuationfileid
	 , D.[type] as 'DimSupportTypeBK'
	 , D.TotalAmount as era_totalamount
	 , convert(nvarchar(40),D.SupplierId) as 'DimSupplierBK'
	-- , CASE D.Active WHEN 1 THEN 'Active' 
	 --                WHEN 0 THEN 'Inactive'
	  --               ELSE 'Unknown'
	  -- END as 'Referral Status'
	 , CONVERT(DATE, D.ValidFrom) as ValidFromDate
	 , CONVERT(DATE, D.ValidTo) as ValidToDate
	 --, D.Purchaser
	 , CONVERT(DATE, D.CreatedDateTime) as 'ReferralDate'
	 --, D.Comments 
	 , TaskNumber as DimTaskBK
	 , C.Name as 'DimLocationB_Task'
	 , convert(NVARCHAR(40), C.Name) as DimLocationBK_EvacuatedFrom
	 	 , -1 as DimEvacuationFileStatusBK
	 , DATEDIFF(DAY, D.ValidFrom, D.ValidTo) as 'NumberOfDays'
	-- , E.LastName + ', ' + E.FirstName as 'Requestor'
	 , 'ERA_RLS1' as 'Source'
from [ERA_RLS1].[IncidentTasks] a
inner join [ERA_RLS1].[EvacueeRegistrations] b 
on a.Id = b.IncidentTaskId
inner join [ERA_RLS1].[Communities] c
	on a.CommunityId = c.Id
JOIN [ERA_RLS1].[Referrals] d
  on d.RegistrationId = b.EssFileNumber
LEFT JOIN ERA_RLS1.Evacuees E
  ON e.RegistrationId =  D.RegistrationId 
WHERE E.EvacueeTypeCode  = 'HOH'
UNION
select convert(nvarchar(40),es.era_evacueesupportid) as 'FactReferralBK'
	, convert(nvarchar(40),es.era_evacueesupportid) as 'DimReferralDetailBK'
	, es.era_name as ReferralID
	, convert(nvarchar(40),es.era_supporttype) as 'DimSupportTypeBK'
	, es.era_totalamount as TotalAmount
	, convert(nvarchar(40),es.era_supplierid) as 'DimSupplierBK'
	, convert(DATE, es.era_validfrom) as ValidFromDate
	, convert(DATE, es.era_validto) as ValidToDate
	, convert(DATE, es.createdon) as ReferralDate
	, convert(nvarchar(40),ef.era_taskid) as DimTaskBK
	, convert(nvarchar(40),t.era_jurisdictionid) as 'DimLocationBK_Task'
	, convert(nvarchar(40), ef.era_evacuatedfromid) as DimLocationBK_EvacuatedFrom
	, ef.era_essfilestatus as DimEvacuationFileStatusBK
	, DATEDIFF(DAY, es.era_validfrom, es.era_validto) as 'NumberOfDays'
	, 'ERA Dynamics' as 'Source'
	--, era_s
from [era_stage].[era_evacueesupport] es
left join [era_stage].[era_evacuationfile] ef
	on es.era_evacuationfileid = ef.era_evacuationfileid
	left join [era_stage].[era_task] t
		on ef.era_taskid = t.era_taskid
	where es.era_supplierid is not null
GO
PRINT N'Adding schema binding to [era_rpt].[FactRegistrant]...';


GO


ALTER VIEW [era_rpt].[FactRegistrant]
WITH SCHEMABINDING
AS
SELECT DISTINCT 
	   CONVERT(VARCHAR, ER.EssFileNumber) as FactRegistrantBK
     , IT.TaskNumber as DimTaskBK
	 , CONVERT(DATE, IT.TaskNumberStartDate) as TaskStartDate
	 , CONVERT(DATE,IT.TaskNumberEndDate) as TaskEndDate
	 , C.Name as DimLocationBK_Task
	 , convert(NVARCHAR(40), C.Name) as DimLocationBK_EvacuatedFrom
	 , -1 as DimEvacuationFileStatusBK
	 , 'ERA_RLS1' as 'Source'
FROM [ERA_RLS1].[IncidentTasks] IT
JOIN [ERA_RLS1].[Communities] C
  on IT.CommunityId = C.Id
JOIN [ERA_RLS1].[EvacueeRegistrations] ER 
  on IT.Id = ER.IncidentTaskId
UNION ALL 
SELECT DISTINCT       
       CONVERT(NVARCHAR(40), ef.era_registrant) as FactRegistrantBK
	--s , ef.era_taskid
	 , convert(nvarchar(40), et.era_taskid) as DimTaskBK
	 , CONVERT(DATE,et.era_taskstartdate) as TaskStartDate
	 , CONVERT(DATE,et.era_taskenddate) as TaskEndDate
	 , convert(nvarchar(40), et.era_jurisdictionid) as DimLocationBK_Task
	 , convert(nvarchar(40), ef.era_evacuatedfromid) as DimLocationBK_EvacuatedFrom
	 , ef.era_essfilestatus as DimEvacuationFileStatusBK
	 , 'ERA Dynamics' as 'Source'
from  [era_stage].era_evacuationfile ef
JOIN [era_stage].[era_task] et
  ON et.era_taskid  = ef.era_taskid
GO
PRINT N'Adding schema binding to [era_rpt].[FactSupport]...';


GO









ALTER VIEW [era_rpt].[FactSupport]
WITH SCHEMABINDING 
AS
select DISTINCT 
	   CONVERT(NVARCHAR(40),R.Id) FactSupportBK
	 , CONVERT(NVARCHAR(40),R.Id) DimSupportBK
	 , CONVERT(NVARCHAR(40), R.[type]) as DimSupportTypeBK
	 , ISNULL(R.TotalAmount, 0.00) as TotalAmount
	 , CONVERT(NVARCHAR(40), IT.TaskNumber) as DimTaskBK_EvacuationFile
	 , convert(NVARCHAR(40), IT.TaskNumber) as DimTaskBK
     , CONVERT(DATE,IT.TaskNumberStartDate) as TaskStartDate
	 , CONVERT(DATE,IT.TaskNumberEndDate) as TaskEndDate
	 , convert(NVARCHAR(40), C.Name) as DimLocationBK_Task
	 , convert(NVARCHAR(40), C.Name) as DimLocationBK_EvacuatedFrom
	 , -1 as DimEvacuationFileStatusBK
	 , CONVERT(DATE, r.ValidFrom) as ValidFromDate
	 , CONVERT(DATE, r.ValidTo) as ValidToDate
	 , convert(nvarchar(40), ER.ESSFileNumber) as DimEvacuationFileBK
	 , '-1' as DimSupportDeliveryTypeBK
	 , '-1' as DimSupportStatusBK
	 , 'ERA_RLS1' as 'Source'
  from [ERA_RLS1].[EvacueeRegistrations] ER
  JOIN [ERA_RLS1].[IncidentTasks] IT
  on IT.Id = ER.IncidentTaskId
  inner join [ERA_RLS1].[Communities] C
	on IT.CommunityId = C.Id
JOIN [ERA_RLS1].[Referrals] R
  on R.RegistrationId = ER.EssFileNumber
UNION ALL 
select DISTINCT 
       CONVERT(NVARCHAR(40), es.era_evacueesupportid) as FactSupportBK
	 , CONVERT(NVARCHAR(40), es.era_evacueesupportid) as DimSupportBK
	 , convert(nvarchar(40), es.era_supporttype) as DimSupportTypeBK
	 , ISNULL(es.era_totalamount , 0.0) as TotalAmount
	 , convert(nvarchar(40), et.era_taskid) as DimTaskBK_EvacuationFile
	 , convert(nvarchar(40), es.era_task) as DimTaskBK
	 , CONVERT(DATE,et.era_taskstartdate) as TaskStartDate
	 , CONVERT(DATE,et.era_taskenddate) as TaskEndDate 
	 , convert(nvarchar(40), et.era_jurisdictionid) as DimLocationBK_Task
	 , convert(nvarchar(40), ef.era_evacuatedfromid) as DimLocationBK_EvacuatedFrom
	 , ef.era_essfilestatus as DimEvacuationFileStatusBK
	 , convert(date, es.era_validfrom) as ValidFromDate
	 , convert(date, es.era_validfrom) as ValidToDate
	 ,convert(nvarchar(40), ef.era_evacuationfileid) as DimEvacuationFileBK
	 , convert(nvarchar(40), es.era_supportdeliverytype) as DimSupportDeliveryTypeBK
	 , convert(nvarchar(40), es.statuscode) as DimSupportStatusBK
	 , 'ERA Dynamics' as 'Source'
from [era_stage].era_evacueesupport es
JOIN [era_stage].era_evacuationfile ef
ON es.era_evacuationfileid = ef.era_evacuationfileid
JOIN [era_stage].[era_task] et
  ON et.era_taskid  =ef.era_taskid
GO
PRINT N'Adding schema binding to [era_rpt].[DimSupportType]...';


GO



ALTER   VIEW [era_rpt].[DimSupportType]
WITH SCHEMABINDING 
AS
select DISTINCT 
		[type] as 'DimSupportTypeBK'
       ,[type] as 'Support Type'
     , 'ERA_RLS1' as 'Source' 
from [ERA_RLS1].[Referrals]
UNION ALL 
select DISTINCT	
	convert(nvarchar(40), era_supporttype) as DimSupportTypeBK
     ,  era_supporttypename as 'Support Type'
	 , 'ERA Dynamics' as 'Source'
from [era_stage].era_evacueesupport
where ltrim(rtrim(era_supporttypename)) not in ('Lodging-Hotel/Motel', 'Shelter-Hotel/Motel/Campground', 'Shelter-Billeting', 'Shelter-Group Lodging')
--order by DimSupportTypeBK
GO
PRINT N'Adding schema binding to [era_rpt].[DimTask]...';


GO



ALTER   VIEW [era_rpt].[DimTask]
WITH SCHEMABINDING
AS
select DISTINCT 
	convert(nvarchar(40), TaskNumber) as DimTaskBK
     ,  TaskNumber as 'Task Number'
	 , 'Unknown' as SupportPathway
	 , 'Unknown' as IncidentCategory
	 , 'Unknown' as EventLevel
	 , TaskNumberStartDate as TaskStartDate
	 , TaskNumberEndDate as TaskEndDate
     , 'ERA_RLS1' as 'Source'
  from [ERA_RLS1].[IncidentTasks] a
  inner join [ERA_RLS1].[Communities] b
	on a.CommunityId = b.Id
UNION ALL
select DISTINCT 
		convert(nvarchar(40), era_taskid) as DimTaskBK
	 ,  era_name  as 'Task Number'
	 , isnull(era_supportpathwayidname, 'In Person') as SupportPathway
	 , isnull(era_incidentcategoryname, 'Unknown') as IncidentCategory
	 , isnull(era_eventlevelidname, 'Unknown') as EventLevel
	 , era_taskstartdate as TaskStartDate
	 , era_taskenddate as TaskEndDate
     , 'ERA Dynamics' as 'Source'
from [era_stage].[era_task]
GO
PRINT N'Altering [era_rpt].[DimEvacuationFileStatus]...';


GO

ALTER view [era_rpt].[DimEvacuationFileStatus]
as
SELECT distinct  era_essfilestatus as DimEvacuationFileStatusBK, era_essfilestatusname as EvacuationFileStatus, 'ERA Dynamics' as 'Source'
  FROM [EMBC].[era_stage].[era_evacuationfile]
union
	select -1 as DimEvacuationFileStatusBK, 'Unknown' as EvacuationFileStatus,  'ERA_RLS1' as 'Source'
GO
PRINT N'Altering [era_rpt].[DimLocation]...';


GO


ALTER  VIEW [era_rpt].[DimLocation]
WITH SCHEMABINDING
AS 
SELECT DISTINCT
	b.Name as DimLocationBK
     ,  b.Name as 'City'
     , b.Name + ', British Columbia, Canada' as 'Full Location'
	 ,isnull(c.era_regionaldistrictname, 'Unknown') as RegionalDistrict
	 , b.RegionName as EMCRRegion
	 , 'ERA_RLS1' as 'Source'
  FROM [ERA_RLS1].[IncidentTasks] a
  INNER JOIN [ERA_RLS1].[Communities] b
	ON a.CommunityId = b.Id
  left join [era_stage].era_jurisdiction c
	on b.Name = c.era_jurisdictionname
UNION 
SELECT DISTINCT 
		convert(nvarchar(40), era_jurisdictionid) as DimLocationBK
      , era_jurisdictionname as 'City'
	 , era_jurisdictionname + ', British Columbia, Canada' as 'Full Location'
	 , b.era_districtname as RegionalDistrict
	 , b.era_embcregionname as EMCRRegion
	 , 'ERA Dynamics' as 'Source'
FROM [era_stage].[era_jurisdiction] a
left join [era_stage].[era_regionaldistrict] b
	on a.era_regionaldistrict = b.era_regionaldistrictid
GO
PRINT N'Creating [era_rpt].[City_old]...';


GO
CREATE   VIEW [era_rpt].[City_old]
WITH SCHEMABINDING
AS 
SELECT DISTINCT
       b.Name as 'City'
     , b.Name + ', British Columbia, Canada' as 'Full Location'
	 , 'ERA_RLS1' as 'Source'
  FROM [ERA_RLS1].[IncidentTasks] a
  INNER JOIN [ERA_RLS1].[Communities] b
	ON a.CommunityId = b.Id
UNION 
SELECT DISTINCT 
       era_jurisdictionidname as 'City'
	 , era_jurisdictionidname + ', British Columbia, Canada' as 'Full Location'
	 , 'ERA Dynamics' as 'Source'
FROM [era_stage].[era_task]
GO
PRINT N'Creating [era_rpt].[Date_old]...';


GO
CREATE VIEW [era_rpt].[Date_old]
WITH SCHEMABINDING
AS

SELECT [DATE_SK]
      ,CONVERT(DATE, [CAL_DAY_DT]) as 'Calendar Day'
      ,[FISCAL_YEAR_TXT] as 'Fiscal Year Text'
      ,[FISCAL_YEAR_SHORT_DSC] as 'Fiscal Year Short Description'
      ,[FISCAL_YEAR_LONG_DSC] as 'Fiscal Year Long Description'
      ,[FISCAL_QTR_VAL] as 'Fiscal Quarter Value'
      ,[FISCAL_QTR_SHORT_DSC] as 'Fiscal Quarter Short Description'
      ,[FISCAL_QTR_LONG_DSC] as 'Fiscal Quarter Long Description'
      ,[FISCAL_MONTH_VAL] as 'Fiscal Month Value'
      ,[FISCAL_MONTH_SHORT_DSC] as 'Fiscal Month Short Description'
      ,[FISCAL_MONTH_LONG_DSC]  as 'Fiscal Month Long Description'
      ,[CAL_DAY_VAL] as 'Calendar Day Value'
      ,[CAL_MONTH_VAL] as 'Calendar Month Value'
      ,[CAL_YEAR_VAL] as 'Calendar Year Value'
      ,[CAL_MONTH_SHORT_NM] as 'Calendar Month Short Name'
      ,[CAL_MONTH_LONG_NM] as 'Calendar Month Long Description'
      ,[CAL_DAY_NM] as 'Calendar Day Name'
      ,[CAL_DAY_OF_MONTH_VAL] as 'Calendar Day of Month Value'
      ,[CAL_DAY_OF_WEEK_VAL] as 'Calendar Day of Week Value'
      ,[CAL_WEEKDAY_INDICATOR_YN] as 'Calendar Weekday YN'
      ,[CAL_END_OF_MONTH_YN] as 'Calendar End  of Month YN'
      ,[CAL_WEEK_NUMBER_VAL] as 'Calendar Week Number Value'
      ,[CAL_BC_HOLIDAY_YN] ' Calendar BC Holiday YN'
  FROM [dbo].[D_DATE]
  WHERE CAL_DAY_DT > '2020-01-31'
    AND CAL_DAY_DT  < GETDATE()
GO
PRINT N'Creating [era_rpt].[DimETransferTransactionStatus]...';


GO









create VIEW [era_rpt].[DimETransferTransactionStatus]
WITH SCHEMABINDING 
AS
--select DISTINCT 
--	   CONVERT(NVARCHAR(40),R.Id) DimSupportBK
--	, CONVERT(NVARCHAR(40),R.Id) SupportNumber
--	 , 'ERA_RLS1' as 'Source'
--  from  [ERA_RLS1].[Referrals] R
--UNION ALL
--**Apparently no RLS1 EtransferInfo**
select DISTINCT 
	   et.statuscode as DimETransferTransactionStatusBK
	 , et.statuscodename as StatusReason
	 , 'ERA Dynamics' as 'Source'
from [era_stage].era_etransfertransaction et
GO
PRINT N'Creating [era_rpt].[DimEvacuationFile]...';


GO

CREATE view [era_rpt].[DimEvacuationFile]
as
SELECT distinct  convert(nvarchar(40), era_evacuationfileid) as DimEvacuationFileBK, era_essfilestatusname as EvacuationFileStatus, 
 (select top 1 isnull(era_insurancecoveragename, 'Unknown') from era_stage.era_needassessment where era_evacuationfile = a.era_evacuationfileid) as Insurance
 ,'ERA Dynamics' as 'Source'
  FROM [EMBC].[era_stage].[era_evacuationfile] a
union
	select DISTINCT convert(nvarchar(40), ESSFileNumber) as DimEvacuationFileBK, 'Unknown' as EvacuationFileStatus, InsuranceCode as Insureance, 'ERA_RLS1' as 'Source'
	from ERA_RLS1.EvacueeRegistrations
GO
PRINT N'Creating [era_rpt].[DimSupport]...';


GO









create VIEW [era_rpt].[DimSupport]
WITH SCHEMABINDING 
AS
select DISTINCT 
	   CONVERT(NVARCHAR(40),R.Id) DimSupportBK
	, CONVERT(NVARCHAR(40),R.Id) SupportNumber
	 , 'ERA_RLS1' as 'Source'
  from  [ERA_RLS1].[Referrals] R
UNION ALL 
select DISTINCT 
       CONVERT(NVARCHAR(40), es.era_evacueesupportid) as DimSupportBK
	 , era_name as SupportNumber
	 , 'ERA Dynamics' as 'Source'
from [era_stage].era_evacueesupport es
GO
PRINT N'Creating [era_rpt].[DimSupportDeliveryType]...';


GO


CREATE VIEW [era_rpt].[DimSupportDeliveryType]
WITH SCHEMABINDING 
as
select Distinct convert(nvarchar(40), era_supportdeliverytype) as DimSupportDeliveryTpeBK, era_supportdeliverytypename as SupportDeliveryType, 'ERA Dynamics' as 'Source'
from era_stage.era_evacueesupport
union
select -1, 'Unknown', 'ERA_RLS1' as 'Source'
GO
PRINT N'Creating [era_rpt].[DimSupportStatus]...';


GO
Create VIEW [era_rpt].[DimSupportStatus]
WITH SCHEMABINDING 
as
select distinct convert(nvarchar(40), statuscode) as DimSupportStatusBK, statuscodename as SupportStatus,  'ERA Dynamics' as 'Source'
from era_stage.era_evacueesupport
union select '-1', 'Unknown', 'ERA_RLS1'
GO
PRINT N'Creating [era_rpt].[Evacuees_old]...';


GO
CREATE VIEW [era_rpt].[Evacuees_old]
WITH SCHEMABINDING 
AS
SELECT  DISTINCT 
		LTRIM(RTRIM(convert(nvarchar(10), E.RegistrationId))) + '-' + LTRIM(RTRIM(convert(nvarchar(10), E.EvacueeSequenceNumber))) as era_householdmemberid
	  , E.LastName + ', ' + E.FirstName as Name
	  , E.EvacueeTypeCode
	  , IT.TaskNumber as 'Task Number'
	  , CONVERT(DATE, IT.TaskNumberStartDate) as era_taskstartdate
	  , CONVERT(DATE, IT.TaskNumberEndDate) as era_taskenddate
	  , C.Name as 'City'
	  , 'ERA_RLS1' as 'Source'
FROM [ERA_RLS1].[IncidentTasks] IT
JOIN [ERA_RLS1].[EvacueeRegistrations] ER 
  ON IT.Id = ER.IncidentTaskId
JOIN ERA_RLS1.Evacuees E
  ON E.RegistrationId = ER.EssFileNumber		  
JOIN [ERA_RLS1].[Communities] C
  ON IT.CommunityId = C.Id
UNION ALL
select DISTINCT 
       CONVERT(VARCHAR,hhm.era_householdmemberid) as era_householdmemberid
	    , NULL as 'Name'
       , NULL as 'EvacueeTypeCode'
	 , et.era_name as 'Task Number' 
	 , CONVERT(DATE, et.era_taskstartdate) as era_taskstartdate
	 , CONVERT(DATE, et.era_taskenddate) as era_taskenddate
--	 , et.era_taskid
	 , et.era_jurisdictionidname  as 'City'
	 , 'ERA Dynamics' as 'Source'
from [era_stage].era_householdmember hhm
JOIN [era_stage].era_evacuationfile ef
ON hhm.era_evacuationfileid = ef.era_evacuationfileid
JOIN [era_stage].[era_task] et
  ON et.era_taskid  =ef.era_taskid
GO
PRINT N'Creating [era_rpt].[FactActiveTask]...';


GO




CREATE VIEW [era_rpt].[FactActiveTask]
WITH SCHEMABINDING
AS
select DISTINCT 
	convert(nvarchar(40), TaskNumber) as DimTaskBK
     ,  TaskNumber as 'Task Number'
	 ,convert(date, TaskNumberStartDate) as TaskStartDate
	 ,convert(date, TaskNumberEndDate) as TaskEndDate--select *
	 , convert(date, b.CAL_DAY_DT) as Date
	 , case when datediff(dd, convert(date, TaskNumberStartDate), convert(date, b.CAL_DAY_DT)) > 9 then 'Yes' else 'No' end as Active10PlusDays
	 , datediff(dd, convert(date, TaskNumberStartDate), convert(date, b.CAL_DAY_DT)) as CurrentDayCount
	 , datediff(dd, convert(date, TaskNumberStartDate), convert(date, TaskNumberEndDate)) as TotalDayCount
	 , convert(NVARCHAR(40), C.Name) as DimLocationBK
     , 'ERA_RLS1' as 'Source'
  from [ERA_RLS1].[IncidentTasks] a
  inner join dbo.D_DATE b
	on convert(date, b.CAL_DAY_DT) between convert(date, TaskNumberStartDate) and convert(date, TaskNumberEndDate)
  inner join [ERA_RLS1].[Communities] C
	on a.CommunityId = C.Id
  --inner join [ERA_RLS1].[Communities] b
	--on a.CommunityId = b.Id
UNION ALL
select DISTINCT 
		convert(nvarchar(40), era_taskid) as DimTaskBK
	 ,  era_name  as 'Task Number'
	 ,convert(date, era_taskstartdate) as TaskStartDate
	 ,convert(date, era_taskenddate) as TaskEndDate--select *
	 ,convert(date, b.CAL_DAY_DT) as Date
	 , case when datediff(dd, convert(date, era_taskstartdate), convert(date, b.CAL_DAY_DT)) > 9 then 'Yes' else 'No' end as Active10PlusDays
	 , datediff(dd, convert(date, era_taskstartdate), convert(date, b.CAL_DAY_DT)) as CurrentDayCount
	 , datediff(dd, convert(date, era_taskstartdate), convert(date, era_taskenddate)) as TotalDayCount
	 , convert(nvarchar(40), era_jurisdictionid) as DimLocationBK_Task
     , 'ERA Dynamics' as 'Source'
from [era_stage].[era_task] a
inner join dbo.D_DATE b
	on convert(date, b.CAL_DAY_DT) between convert(date, era_taskstartdate) and convert(date, era_taskenddate)
GO
PRINT N'Creating [era_rpt].[FactETransferTransaction]...';


GO









create VIEW [era_rpt].[FactETransferTransaction]
WITH SCHEMABINDING 
AS
--select DISTINCT 
--	   CONVERT(NVARCHAR(40),R.Id) DimSupportBK
--	, CONVERT(NVARCHAR(40),R.Id) SupportNumber
--	 , 'ERA_RLS1' as 'Source'
--  from  [ERA_RLS1].[Referrals] R
--UNION ALL
--**Apparently no RLS1 EtransferInfo**
select DISTINCT 
	convert(nvarchar(40), et.era_etransfertransactionid) as FactETransferTransactionBK
       ,CONVERT(NVARCHAR(40), eset.era_evacueesupportid) as DimSupportBK
	   , et.statuscode as DimETransferTransactionStatusBK
	 , et.era_name as TransactionID
	 , convert(date, et.createdon) as CreatedOnDate
	 ,convert(date, et.era_casresponsedate) as CASResponseDate
	 , 'ERA Dynamics' as 'Source'
from [era_stage].era_etransfertransaction et
inner join [era_stage].[era_era_evacueesupport_era_etransfertransac] eset
	on et.era_etransfertransactionid = eset.era_etransfertransactionid
GO
PRINT N'Creating [era_stage].[usp_ResetETL]...';


GO

CREATE   PROCEDURE [era_stage].[usp_ResetETL]
WITH EXECUTE AS 'embc_etl'
AS 
BEGIN
    DECLARE
        @V_TABLENAME varchar(300),
        @V_SQL varchar(max);

    DECLARE
        C1 CURSOR LOCAL FOR 
		SELECT [TableName] 
		FROM   [dbo].[AdmLoadControl]
		WHERE  [SchemaName] = 'era_stage'
		AND    [IsEnabled] = 1
		ORDER BY [TableName];

    OPEN C1;
    FETCH C1 INTO @V_TABLENAME;
    WHILE @@FETCH_STATUS = 0
	BEGIN
        SET @V_SQL = 'TRUNCATE TABLE [era_stage].' + @V_TABLENAME + ';';
		PRINT(@V_SQL);
		EXECUTE (@V_SQL)
        FETCH C1 INTO @V_TABLENAME;
    END;

	UPDATE [dbo].[AdmLoadControl]
	SET [LastLoadDate] = '1900-01-01'
	WHERE [SchemaName] = 'era_stage';

END
GO
PRINT N'Update complete.';


GO
