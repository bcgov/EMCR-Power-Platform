
CREATE VIEW [EMBCPROD].[V_DIAGNOSIS] (
   UNIQUE_KEY, 
   PARENT_REPORT_UNIQUE_KEY, 
   HISTORY_VERSION, 
   DELETED, 
   FOREIGN_DOC, 
   OWNED_BY, 
   PATIENT_ID, 
   CHIEF_COMPLAINT_CODE, 
   CHIEF_COMPLAINT_DATE, 
   CHIEF_COMPLAINT_TEXT, 
   FINAL_DIAGNOSIS_CODE, 
   FINAL_DIAGNOSIS_DATE, 
   FINAL_DIAGNOSIS_TEXT, 
   RULEOUT_DIAGNOSIS_CODE, 
   RULEOUT_DIAGNOSIS_DATE, 
   RULEOUT_DIAGNOSIS_TEXT, 
   LAB_TESTS, 
   CREATION_DATE, 
   CREATED_BY, 
   MODIFICATION_DATE, 
   MODIFIED_BY)
AS 
   SELECT 
      DI.DIAGNOSIS_ID AS UNIQUE_KEY, 
      DI.DSM_ID AS PARENT_REPORT_UNIQUE_KEY, 
      CASE REPT.STATUS
         WHEN 'O' THEN 'Yes'
         ELSE 'No'
      END AS HISTORY_VERSION, 
      CASE REPT.STATUS
         WHEN 'D' THEN 'Yes'
         ELSE 'No'
      END AS DELETED, 
      CASE REPT.CREATED_BY
         WHEN NULL THEN 'Yes'
         ELSE 'No'
      END AS FOREIGN_DOC, 
      CASE REPT.IS_OWNER
         WHEN 'Y' THEN 'Local'
         ELSE 'No'
      END AS OWNED_BY, 
      DI.PATIENT_ID, 
      DI.CHIEF_COM_CODE AS CHIEF_COMPLAINT_CODE, 
      DI.CHIEF_COM_DATE AS CHIEF_COMPLAINT_DATE, 
      DI.CHIEF_COM_TEXT AS CHIEF_COMPLAINT_TEXT, 
      DI.FINAL_DIAG_CODE AS FINAL_DIAGNOSIS_CODE, 
      DI.FINAL_DIAG_DATE AS FINAL_DIAGNOSIS_DATE, 
      DI.FINAL_DIAG_TEXT AS FINAL_DIAGNOSIS_TEXT, 
      DI.RULE_DIAG_CODE AS RULEOUT_DIAGNOSIS_CODE, 
      DI.RULE_DIAG_DATE AS RULEOUT_DIAGNOSIS_DATE, 
      DI.RULE_DIAG_TEXT AS RULEOUT_DIAGNOSIS_TEXT, 
      DI.LAB_TESTS, 
      DI.CREATION_DATE, 
      CASE 
         WHEN UC.USER_NAME IS NULL THEN 
            (
               SELECT TBL_REMOTE_DOCUMENT_USER_INFO.CREATED_BY_USER_LOGIN_ID
               FROM EMBCPROD.TBL_REMOTE_DOCUMENT_USER_INFO
               WHERE TBL_REMOTE_DOCUMENT_USER_INFO.GLOBAL_REPORT_ID = DI.DIAGNOSIS_ID
            )
         ELSE UC.USER_NAME
      END AS CREATED_BY, 
      DI.MODIFICATION_DATE, 
      CASE 
         WHEN UM.USER_NAME IS NULL THEN 
            (
               SELECT TBL_REMOTE_DOCUMENT_USER_INFO$2.MODIFIED_BY_USER_LOGIN_ID
               FROM EMBCPROD.TBL_REMOTE_DOCUMENT_USER_INFO  AS TBL_REMOTE_DOCUMENT_USER_INFO$2
               WHERE TBL_REMOTE_DOCUMENT_USER_INFO$2.GLOBAL_REPORT_ID = DI.DIAGNOSIS_ID
            )
         ELSE UM.USER_NAME
      END AS MODIFIED_BY
   FROM 
      EMBCPROD.TBL_DSM  AS DSM, 
      EMBCPROD.TBL_REPORT  AS REPT, 
      EMBCPROD.TBL_DIAGNOSIS  AS DI 
         LEFT JOIN EMBCPROD.TBL_REPORT  AS UCR 
         ON UCR.REPORT_ID = DI.CREATED_BY 
         LEFT JOIN EMBCPROD.TBL_USER  AS UC 
         ON UCR.GLOBAL_REPORT_ID = UC.USER_ID AND UCR.STATUS IN ( 'A', 'D' ) 
         LEFT JOIN EMBCPROD.TBL_REPORT  AS UMR 
         ON UMR.REPORT_ID = DI.MODIFIED_BY 
         LEFT JOIN EMBCPROD.TBL_USER  AS UM 
         ON UM.USER_ID = UMR.GLOBAL_REPORT_ID AND UMR.STATUS IN ( 'A', 'D' )
   WHERE DI.DSM_ID = DSM.DSM_ID AND REPT.GLOBAL_REPORT_ID = DSM.DSM_ID

GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'EMBCPROD.V_DIAGNOSIS', @level0type = N'SCHEMA', @level0name = N'EMBCPROD', @level1type = N'VIEW', @level1name = N'V_DIAGNOSIS';

